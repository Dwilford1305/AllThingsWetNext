# GitHub Copilot Setup Steps for All Things Wetaskiwin
# This file provides structured setup guidance for developers working on this Next.js community platform

name: "All Things Wetaskiwin Setup"
description: "Community hub platform built with Next.js 15, TypeScript, MongoDB Atlas, and Tailwind CSS"

# Prerequisites that must be installed before starting
prerequisites:
  - name: "Node.js"
    version: "18+"
    description: "JavaScript runtime (tested with 20.19.4)"
    install_url: "https://nodejs.org/"
    
  - name: "npm"  
    version: "10+"
    description: "Package manager (tested with 10.8.2)"
    install_url: "https://nodejs.org/"
    
  - name: "Git"
    version: "any"
    description: "Version control system"
    install_url: "https://git-scm.com/"
    
  - name: "MongoDB Atlas Account"
    version: "any"
    description: "Cloud database service (optional for basic development)"
    install_url: "https://www.mongodb.com/atlas"

# Step-by-step setup process
setup_steps:
  - step: 1
    name: "Install Dependencies"
    description: "Download and install all project dependencies"
    commands:
      - "npm install"
    expected_duration: "30-60 seconds"
    notes: 
      - "Downloads ~857M to node_modules"
      - "Safe to run multiple times"
      - "May show audit warnings (generally safe unless critical)"

  - step: 2
    name: "Environment Configuration"
    description: "Set up environment variables for local development"
    commands:
      - "cp env.example .env.local"
    files_to_edit:
      - path: ".env.local"
        description: "Configure environment variables"
        required_variables:
          - name: "MONGODB_URI"
            description: "MongoDB Atlas connection string"
            example: "mongodb+srv://user:password@cluster.mongodb.net/dbname"
            required: false
            notes: "Optional for basic development - app gracefully handles missing DB"
          - name: "NEXTAUTH_URL" 
            description: "Application URL for authentication"
            example: "http://localhost:3000"
            required: true
          - name: "NEXTAUTH_SECRET"
            description: "Secret key for NextAuth.js"
            example: "your-32-character-secret-key-here"
            required: true
          - name: "JWT_SECRET"
            description: "Secret for JWT token signing"
            example: "your-jwt-secret-key-here"
            required: true
          - name: "JWT_REFRESH_SECRET"
            description: "Secret for JWT refresh tokens"
            example: "your-jwt-refresh-secret-here"
            required: true
    notes:
      - "Missing MongoDB connection is handled gracefully"
      - "Generate strong, unique secrets for production"
      - "Never commit .env.local to version control"

  - step: 3
    name: "Build Application"
    description: "Compile and build the Next.js application"
    commands:
      - "npm run build"
    expected_duration: "~20 seconds"
    timeout: "90+ seconds"
    success_indicators:
      - "✓ Compiled successfully"
      - "✓ Generating static pages"
      - "Route table displayed"
    known_warnings:
      - "Missing MONGODB_URI environment variable (expected)"
      - "No build cache found (expected on first run)"
    notes:
      - "NEVER CANCEL - Always let build complete"
      - "Creates ~366M in .next/ directory"
      - "Must complete successfully before deployment"

  - step: 4
    name: "Run Tests"
    description: "Execute test suite to validate code integrity"
    commands:
      - "npm run test"
    expected_duration: "~10.6 seconds"
    timeout: "30+ seconds"
    success_indicators:
      - "Most tests passing"
      - "Test Suites: X failed, Y passed (some failures expected without DB)"
    notes:
      - "NEVER CANCEL - Always let tests complete"
      - "Some test failures expected without MongoDB connection"
      - "Core functionality tests should pass"

  - step: 5
    name: "Code Linting"
    description: "Check code style and potential issues"
    commands:
      - "npm run lint"
    expected_duration: "~6 seconds"
    timeout: "60+ seconds"
    notes:
      - "Currently has known linting errors (to be addressed separately)"
      - "Uses ESLint with Next.js configuration"

  - step: 6
    name: "Start Development Server"
    description: "Launch the local development server"
    commands:
      - "npm run dev"
    expected_duration: "1-2 seconds"
    timeout: "60+ seconds"
    success_indicators:
      - "▲ Next.js"
      - "Local: http://localhost:3000"
      - "Ready in X ms"
    notes:
      - "Uses Turbopack for faster builds"
      - "Supports hot reloading and fast refresh"
      - "Shows development environment banner"

# Validation steps to confirm setup is working
validation_steps:
  - step: 1
    name: "Health Check"
    description: "Verify basic application functionality"
    commands:
      - "curl http://localhost:3000/api/health"
    expected_response: "JSON with status information"
    notes: "Database may show 'unhealthy' without MongoDB - this is expected"

  - step: 2
    name: "Core Pages Access"
    description: "Test main application pages"
    commands:
      - "curl -I http://localhost:3000/"
      - "curl -I http://localhost:3000/events"
      - "curl -I http://localhost:3000/businesses"
      - "curl -I http://localhost:3000/news"
      - "curl -I http://localhost:3000/jobs"
      - "curl -I http://localhost:3000/marketplace"
    expected_response: "200 OK status codes"
    
  - step: 3
    name: "API Endpoints Test"
    description: "Verify API functionality"
    commands:
      - "curl http://localhost:3000/api/events"
      - "curl http://localhost:3000/api/businesses"
      - "curl http://localhost:3000/api/news"
    expected_response: "Graceful error messages or data arrays"
    notes: "Error responses are expected without database connection"

  - step: 4
    name: "Authentication System"
    description: "Test authentication functionality"
    manual_steps:
      - "Visit http://localhost:3000/auth-test"
      - "Verify registration and login forms appear"
      - "Test form interactions work"

# Key project areas for development
project_structure:
  frontend:
    path: "src/app"
    description: "Next.js App Router pages and layouts"
    key_files:
      - "page.tsx - Homepage dashboard"
      - "events/page.tsx - Events listing"
      - "businesses/page.tsx - Business directory"
      - "marketplace/page.tsx - Buy/sell/trade platform"
      
  api:
    path: "src/app/api"
    description: "API routes for data and authentication"
    key_endpoints:
      - "/api/health - System status"
      - "/api/auth/* - User authentication"
      - "/api/events - Events data"
      - "/api/businesses/* - Business operations"
      
  components:
    path: "src/components"
    description: "Reusable React components"
    key_files:
      - "Dashboard.tsx - Main dashboard"
      - "ui/* - UI component library"
      
  services:
    path: "src/lib"
    description: "Core business logic and utilities"
    key_files:
      - "mongodb.ts - Database connection"
      - "auth.ts - Authentication logic"
      - "scraperService.ts - Data collection"

# Development workflow recommendations
development_workflow:
  - name: "Feature Development"
    steps:
      - "Create feature branch from main"
      - "Run: npm run build && npm run test && npm run lint"
      - "Make changes in appropriate src/ directories"
      - "Test locally with npm run dev"
      - "Run validation commands again"
      - "Test key user scenarios manually"
      - "Submit PR for review"

  - name: "Database Operations"
    optional_endpoints:
      - "/api/seed - Populate test data (dev only)"
      - "/api/health - Check database connection"
      - "/api/debug/reset-businesses - Reset business data (dev only)"

  - name: "Troubleshooting"
    common_issues:
      - issue: "Port already in use"
        solution: "lsof -ti:3000 | xargs kill -9"
      - issue: "Build cache issues"  
        solution: "rm -rf .next && npm run build"
      - issue: "Dependency problems"
        solution: "rm -rf node_modules package-lock.json && npm install"

# Additional resources and documentation
resources:
  - name: "Comprehensive Documentation"
    path: ".github/copilot-instructions.md"
    description: "Detailed development guide with timing expectations and best practices"
    
  - name: "Main README"
    path: "README.md" 
    description: "Project overview, features, and deployment instructions"
    
  - name: "Admin Guide"
    path: "ADMIN_DASHBOARD_README.md"
    description: "Administrative interface documentation"

# Success criteria
success_criteria:
  - "✅ Build completes without errors in under 90 seconds"
  - "✅ Development server starts in under 60 seconds" 
  - "✅ All major pages accessible (/, /events, /businesses, /news, /jobs, /marketplace)"
  - "✅ API endpoints return proper responses (graceful errors without database)"
  - "✅ Core tests passing (the majority passing, some failures expected without MongoDB)"
  - "✅ Beautiful community hub UI displays correctly"
  - "✅ Application handles both database-connected and disconnected scenarios gracefully"

# Important notes
notes:
  - "This application gracefully handles missing database connections during development"
  - "You can build, test, and develop core features even without MongoDB Atlas configured"
  - "Production server (npm run start) currently has local issues but Vercel deployment works"
  - "Some test failures are expected without MongoDB - focus on core functionality tests"
  - "Build and test commands have specific timing requirements - never cancel early"